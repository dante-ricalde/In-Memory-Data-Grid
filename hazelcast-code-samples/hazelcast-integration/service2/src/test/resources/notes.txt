https://github.com/hazelcast/hazelcast-code-samples/tree/master/hazelcast-integration/docker-compose

Hazelcast Management Center
	user: dante
	pass: Pescadito1
	
I couldn't login in managemente-center 3.9-EA2 using these credentials


Theory	
Runs a one-time command against a service. For example, the following command starts the web service and runs bash as its command.

docker-compose run web bash

# to start a specified service
docker-compose -f hazelcast.yml run hazelcast-client

# to see the logs of a specified service
docker-compose -f src/main/docker/hazelcast.yml logs hazelcast-client

important commands:
~/In-Memory-DataGrid/hazelcast-code-samples/hazelcast-integration/docker-compose/src/main/docker$ docker-compose -f hazelcast.yml ps
~/In-Memory-DataGrid/hazelcast-code-samples/hazelcast-integration/docker-compose/src/main/docker$ docker-compose -f hazelcast.yml scale hazelcast=2
~/In-Memory-DataGrid/hazelcast-code-samples/hazelcast-integration/docker-compose/src/main/docker$ docker exec -it docker_management-center_1 sh
~/In-Memory-DataGrid/hazelcast-code-samples/hazelcast-integration/docker-compose/src/main/docker$ docker-compose -f hazelcast.yml up
~/In-Memory-DataGrid/hazelcast-code-samples/hazelcast-integration/docker-compose/src/main/docker$ docker-compose -f hazelcast.yml down

to inspect a specified container:
docker inspect docker_hazelcast-client_1



It's possible to specify another Dockerfile in docker-compose to customize the creation of a new image instead of  
downloading the image specified in the service in the docker-compose.yml

management-center:
    image:  hazelcast/management-center:3.9-EA2
    ...
    build:
      context: .
      dockerfile: Dockerfile-management-center
      
In this case instead of downloading the image, built a new image using the name "hazelcast/management-center:3.9-EA2" and
the docker file Dockerfile-management-center and the file start.sh because this is specified in the Dockerfile-management-center file


I could connect with management-center to external cluster and to embedded instance hazelcast

In this exercise you have a centralized cluster of hazelcast, which you can scale using
	docker-compose -f hazelcast.yml scale hazelcast=2
All the clients connects to this centralized cluster to put messages to a queue named "queue", when you send a message
to the cluster (to a member from the cluster), the message is stored in that member and a backup messages is stored in
all the remaining members

Apart from having a centralized hz cluster, each client has a hz member embedded, you can scale the client using
	docker-compose -f hazelcast.yml scale hazelcast-client=2
with the client is scale, all the embedded hz members are configured to form a cluster named "hz.service1", when
a client put a message in a queue "embeddedQueue" to its embedded hz member, the message is stored in that member, but it's
also backed (stored) in the remaining embedded hz members that form the cluster "hz.service1"
